apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'


android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.murat.mvvm_baseproject"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        flavorDimensions "default"
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            useProguard true
            debuggable false
            buildConfigField 'Boolean', 'LOG_ENABLED', 'false'
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            shrinkResources false
            useProguard false
            debuggable true
            buildConfigField 'Boolean', 'LOG_ENABLED', 'true'
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
        liveFlavor {
            applicationId "com.murat.mvvm_baseproject"
            android.defaultConfig.applicationId "com.murat.mvvm_baseproject"
            buildConfigField 'String', 'API_BASE_URL', '"http://www.omdbapi.com"'

        }
        devFlavor {
            applicationId "com.murat.mvvm_baseproject"
            android.defaultConfig.applicationId "com.murat.mvvm_baseproject_dev"
            buildConfigField 'String', 'API_BASE_URL', '"http://www.omdbapi.com"'

        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //supportLib
    implementation rootProject.ext.supportLib
    implementation rootProject.ext.supportLibAppCompat
    implementation rootProject.ext.supportLibDesign
    implementation rootProject.ext.supportLibRecyclerview
    implementation rootProject.ext.supportLibCardview
    implementation rootProject.ext.supportConstraintLayout

    //timber
    implementation rootProject.ext.timber

    //di
    implementation rootProject.ext.dagger
    kapt rootProject.ext.daggerApt

    //rx
    implementation rootProject.ext.rxJava
    implementation rootProject.ext.rxAndroid
    implementation rootProject.ext.rxKotlin
    implementation rootProject.ext.rxAnimations

    //net
    implementation rootProject.ext.retrofit
    implementation rootProject.ext.okHttp
    implementation rootProject.ext.gson
    implementation rootProject.ext.rxJavaAdapter
    implementation rootProject.ext.gsonConverter

    //picasso
    implementation rootProject.ext.picasso

    //crashlytics
    implementation (rootProject.ext.crashlytics){
        transitive = true
    }

    // anko
    implementation rootProject.ext.anko
    implementation rootProject.ext.couroutines

    //Architecture Components
    // Lifecycles, LiveData, and ViewModel
    implementation rootProject.ext.lifecycleExtensions
    implementation rootProject.ext.lifecycleCommon

    //Room
    implementation rootProject.ext.room
    kapt rootProject.ext.roomKapt

    // data binding
    annotationProcessor rootProject.ext.databinding

    //kotlin
    implementation rootProject.ext.kotlin

    //test
    testImplementation 'junit:junit:4.12'
    testImplementation "android.arch.core:core-testing:$lifecycle_version"
    testImplementation "android.arch.persistence.room:testing:$room_version"

    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.1', {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs'
    })

}
repositories {
    mavenCentral()
}